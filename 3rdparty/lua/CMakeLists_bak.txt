#================================
# Project setup.
#================================
cmake_minimum_required(VERSION 3.24)
project(lua VERSION 5.4.7 LANGUAGES C CXX)
#================================
# Option variables.
#================================
option(LUA_BUILD_COMPILER "Build Lua compiler" ON)
option(LUA_BUILD_INTERPRETER "Build Lua interpreter" ON)
option(LUA_INSTALL_TARGET "Create install target" ON)
#================================
# Directory variables.
#================================
set(LUA_SOURCE_DIR ${PROJECT_SOURCE_DIR})
set(LUA_SOURCE_ROOT ${LUA_SOURCE_DIR}/lua-5.4.7/src)
#================================
# Add source cmake.
#================================
include(cmake/lua_code_def.cmake)
#================================
# Lua library.
#================================
source_group("include" FILES ${LUA_LIBRARY_INCLUDE})
source_group("source" FILES ${LUA_LIBRARY_SOURCE})
add_library(lua547 ${LUA_LIBRARY_INCLUDE} ${LUA_LIBRARY_SOURCE})
target_include_directories(lua547 PUBLIC
        $<BUILD_INTERFACE:${LUA_SOURCE_ROOT}>
        $<INSTALL_INTERFACE:include>
)
target_compile_features(lua547 PRIVATE cxx_std_20)
set_target_properties(lua547 PROPERTIES DEBUG_POSTFIX "d")
add_library(lua::lua ALIAS lua547)
set_target_properties(lua547 PROPERTIES FOLDER "lua")
#================================
# Lua compiler.
#================================
if (LUA_BUILD_COMPILER)
    source_group("source" FILES ${LUA_COMPILER_SOURCE})
    add_executable(luac ${LUA_COMPILER_SOURCE})
    target_link_libraries(luac PRIVATE lua547)
    set_target_properties(luac PROPERTIES FOLDER "lua")
endif()
#================================
# Lua interpreter
#================================
if (LUA_BUILD_INTERPRETER)
    source_group("source" FILES ${LUA_INTERPRETER_SOURCE})
    add_executable(lua ${LUA_INTERPRETER_SOURCE})
    target_link_libraries(lua PRIVATE lua547)
    set_target_properties(lua PROPERTIES FOLDER "lua")
endif()
#================================
# Lua interpreter
#================================
if (LUA_INSTALL_TARGET)
    include(CMakePackageConfigHelpers)
    include(GNUInstallDirs)

    # 安装目标库
    install(TARGETS lua547
            EXPORT lua547Targets                           # 用于导出目标
            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}    # 安装共享库到 lib 目录
            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}    # 安装静态库到 lib 目录
            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}    # 安装可执行文件到 bin 目录（Windows 下的 DLL）
            INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}  # 安装头文件到 include 目录
    )

    # 安装头文件
    install(FILES ${LUA_LIBRARY_PUBLIC_INCLUDE}
            DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/lua
    )

    # 安装导出文件
    install(EXPORT lua547Targets
            FILE lua547Targets.cmake
            NAMESPACE lua::
            DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/lua
    )

    # 生成 CMake 包配置文件
    write_basic_package_version_file(
            "${CMAKE_CURRENT_BINARY_DIR}/lua547ConfigVersion.cmake"
            VERSION ${PACKAGE_VERSION}
            COMPATIBILITY ExactVersion
    )

    configure_package_config_file(
            "${CMAKE_CURRENT_SOURCE_DIR}/cmake/lua547Config.cmake.in"
            "${CMAKE_CURRENT_BINARY_DIR}/lua547Config.cmake"
            INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/lua
    )

    # 安装配置文件
    install(FILES
            "${CMAKE_CURRENT_BINARY_DIR}/lua547Config.cmake"
            "${CMAKE_CURRENT_BINARY_DIR}/lua547ConfigVersion.cmake"
            DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/lua
    )

endif()